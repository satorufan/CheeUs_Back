<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.cheeus.member.repository.MemberProfileDao">
	
<select id="findByEmail" parameterType="String" resultType="com.cheeus.member.domain.MemberProfile">
	SELECT *
	FROM profile
	WHERE email=#{email}
</select>

<select id="existNickname" parameterType="String" resultType="java.lang.Integer">
	SELECT count(*)
	FROM profile
	WHERE nickname=#{nickname}
</select>

<insert id="createMember" parameterType="com.cheeus.member.domain.MemberProfile">
	INSERT INTO profile(
		email, name, nickname, photo, tel, birth,
		gender, tags, match_ok, location_ok, latitude,
		longitude, location, intro)
	VALUES(
		#{email}, #{name}, #{nickname}, #{photo}, #{tel}, #{birth},
		#{gender}, #{tags}, #{matchOk}, #{locationOk}, #{latitude},
		#{longitude}, #{location}, #{intro})
</insert>

<update id="updateMember" parameterType="com.cheeus.member.domain.MemberProfile">
	UPDATE profile SET 
		photo = #{photo},
		tags = #{tags},
		match_ok = #{matchOk},
		location_ok = #{locationOk},
		location = #{location},
		intro = #{intro}
	WHERE email=#{email}
</update>

<delete id="deleteMember" parameterType="String">
	DELETE FROM profile WHERE email=#{email} 
</delete>



<update id="allowLocation" parameterType="com.cheeus.member.request.LocationRequest">
	UPDATE profile SET
		latitude = #{latitude},
		longitude = #{longitude},
		location_ok = 1
	WHERE email=#{email}
</update>

<update id="allowMatching" parameterType="String">
	UPDATE profile SET
	match_ok = 1
	WHERE email=#{email}
</update>



<select id="findPopularity" parameterType="String" resultType="String">
	SELECT liker
	FROM popularity_list
	WHERE email=#{email}
</select>

<select id="countPopularity" parameterType="String" resultType="java.lang.Integer">
	SELECT count(*)
	FROM popularity_list
	WHERE email=#{email}
</select>

<select id="existPopularity" parameterType="com.cheeus.member.domain.MemberPopularity" resultType="java.lang.Integer">
	SELECT count(*)
	FROM popularity_list
	WHERE email=#{email} AND liker=#{liker}
</select>

<insert id="addPopularity" parameterType="com.cheeus.member.domain.MemberPopularity">
	INSERT INTO popularity_list (email, liker) VALUES (#{email}, #{liker})
</insert>

<delete id="deletePopularity" parameterType="com.cheeus.member.domain.MemberPopularity">
	DELETE FROM popularity_list WHERE liker=#{liker} and email=#{email}
</delete>



<select id="isScrapped" parameterType="com.cheeus.member.domain.MemberScrap" resultType="java.lang.Integer">
	SELECT count(*)
	FROM my_scrap
	WHERE member_email=#{memberEmail} and board_id=#{boardId} and together_id=#{togetherId}
	and event_id=#{eventId} and magazine_id=#{magazineId} and title=#{title}
</select>

<select id="findMyScrap" parameterType="String" resultType="com.cheeus.member.domain.MemberScrap">
	SELECT *
	FROM my_scrap
	WHERE member_email=#{memberEmail}
</select>

<insert id="addScrap" parameterType="com.cheeus.member.domain.MemberScrap">
	INSERT INTO my_scrap (member_email, board_id, together_id, event_id, magazine_id, title, url)
	SELECT
	#{memberEmail},
	CASE
	WHEN EXISTS (SELECT 1 FROM board WHERE id = #{boardId}) THEN #{boardId}
	ELSE null
	END,
	CASE
	WHEN EXISTS (SELECT 1 FROM drink_together WHERE id = #{togetherId}) THEN #{togetherId}
	ELSE null
	END,
	CASE
	WHEN EXISTS (SELECT 1 FROM event_board WHERE id = #{eventId}) THEN #{eventId}
	ELSE null
	END,
	CASE
	WHEN EXISTS (SELECT 1 FROM magazine_board WHERE id = #{magazineId}) THEN #{magazineId}
	ELSE null
	END,
	#{title},
	#{url};
</insert>

<delete id="deleteScrap" parameterType="com.cheeus.member.domain.MemberScrap">
	DELETE FROM my_scrap 
	WHERE member_email=#{memberEmail} and board_id=#{boardId} and together_id=#{togetherId}
	and event_id=#{eventId} and magazine_id=#{magazineId} and title=#{title}
</delete>



<select id="findMyPost" parameterType="String" resultType="com.cheeus.member.response.MyInsertedPostResponse">
	SELECT id, title, writeday, category FROM (
	SELECT id, title, writeday, category
	FROM board WHERE author_id=#{email}
	UNION ALL
	SELECT id, title, writeday, 0 AS category 
	FROM drink_together WHERE author_id=#{email}) AS posts
	ORDER BY writeday DESC
</select>


</mapper>